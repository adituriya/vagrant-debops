# -*- mode: ruby -*-
# vi: set ft=ruby :

# Name of Vagrant box image
vagrant_box = 'debian/buster64'

# The box hostname
hostname = 'example'

# The local domain that the host will be added to
local_domain = 'project.local'

# The local IP address that will be assigned to this box
local_ip = '192.168.11.11'


Vagrant.configure("2") do |config|
  config.vm.box = vagrant_box
  config.vm.hostname = hostname
  config.vm.network :private_network, ip: local_ip

  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.aliases = [hostname + '.' + local_domain]

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true

  # Map additional folders from local to Vagrant
  config.vm.synced_folder "../config", "/home/vagrant/debops"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  config.vm.provider :virtualbox do |vb|

    # Use VBoxManage to customize the VM. For example to change memory:
    vb.customize [
      'modifyvm', :id,
      '--natdnshostresolver1', 'on',
      '--natdnsproxy1', 'on',
      '--memory', '2048',
      '--cpus', '2'
    ]
  end

  $script = <<-SCRIPT
    echo Provisioning dev box...
    echo Updating base system...
    apt-get update
    DEBIAN_FRONTEND=noninteractive apt-get -y upgrade

    echo Installing Debops dependencies...
    DEBIAN_FRONTEND=noninteractive apt-get -y install git build-essential python3-pip python3-future \
      python3-ldap python3-netaddr python3-dnspython python3-passlib \
      python3-dev libffi-dev libssl-dev libsasl2-dev libldap2-dev

    echo Installing Debops...
    su - vagrant -c 'pip3 install --user --no-warn-script-location debops[ansible]'
    echo Updating Debops...
    su - vagrant -c 'debops-update'
    # This prevents warnings when bootstrapping the host
    echo Setting up SSH keys for Vagrant user...
    su - vagrant -c "ssh-keygen -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1"
    echo Bootstrapping host...
    su - vagrant -c 'cd /home/vagrant/debops && debops bootstrap'
    echo Provisioning host using Debops...
    su - vagrant -c 'cd /home/vagrant/debops && debops'

  SCRIPT

  config.vm.provision "shell",
    inline: $script

end